jira.Workflow GWRSM1__Service_Request_Fulfilment_workflow_for_Jira_Service_Management@fssssssss {
  description = "This Jira Service Management Service Request Fulfilment workflow was generated for Project GWRSM1"
  transitions = [
    {
      name = "Back to in progress"
      description = ""
      from = [
        jira.Status.instance.Resolved,
      ]
      to = jira.Status.instance.In_Progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___2@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "UpdateIssueFieldFunction"
            configuration = {
              fieldId = jira.Field.instance.Resolution__resolution
              fieldValue = ""
            }
          },
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Cancel request"
      description = ""
      from = [
        jira.Status.instance.Pending,
        jira.Status.instance.Waiting_for_customer@s,
        jira.Status.instance.In_Progress@s,
        jira.Status.instance.Waiting_for_support@s,
      ]
      to = jira.Status.instance.Canceled
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen@s
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Close"
      description = ""
      from = [
        jira.Status.instance.Canceled,
        jira.Status.instance.Resolved,
      ]
      to = jira.Status.instance.Closed
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Create issue"
      description = ""
      to = jira.Status.instance.Waiting_for_support@s
      type = "initial"
      rules = {
        validators = [
          {
            type = "PermissionValidator"
            configuration = {
              permissionKey = "CREATE_ISSUES"
            }
          },
        ]
        postFunctions = [
          {
            type = "UpdateIssueStatusFunction"
          },
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Issue_Created@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Escalate"
      description = ""
      from = [
        jira.Status.instance.Waiting_for_support@s,
      ]
      to = jira.Status.instance.Escalated
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___2@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Escalate this issue"
      description = ""
      from = [
        jira.Status.instance.Waiting_for_customer@s,
      ]
      to = jira.Status.instance.Escalated
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___2@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "In progress"
      description = ""
      from = [
        jira.Status.instance.Pending,
        jira.Status.instance.Waiting_for_support@s,
        jira.Status.instance.Escalated,
      ]
      to = jira.Status.instance.In_Progress@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___2@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Pending"
      description = ""
      from = [
        jira.Status.instance.In_Progress@s,
        jira.Status.instance.Waiting_for_support@s,
      ]
      to = jira.Status.instance.Pending
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Pending_Reason_screen@s
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Resolve this issue"
      description = ""
      from = [
        jira.Status.instance.Pending,
        jira.Status.instance.Waiting_for_customer@s,
        jira.Status.instance.In_Progress@s,
        jira.Status.instance.Waiting_for_support@s,
      ]
      to = jira.Status.instance.Resolved
      type = "directed"
      screen = {
        id = jira.Screen.instance.JIRA_Service_Desk_Resolve_Issue_Screen@s
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Respond to customer"
      description = ""
      from = [
        jira.Status.instance.Pending,
        jira.Status.instance.Waiting_for_support@s,
      ]
      to = jira.Status.instance.Waiting_for_customer@s
      type = "directed"
      screen = {
        id = jira.Screen.instance.Workflow_Screen___2@ssbs
      }
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
    {
      name = "Respond to support"
      description = ""
      from = [
        jira.Status.instance.Waiting_for_customer@s,
      ]
      to = jira.Status.instance.Waiting_for_support@s
      type = "directed"
      rules = {
        postFunctions = [
          {
            type = "FireIssueEventFunction"
            configuration = {
              event = {
                id = jira.IssueEvent.instance.Generic_Event@s
              }
            }
          },
        ]
      }
    },
  ]
  statuses = [
    {
      id = jira.Status.instance.Canceled
      name = "Canceled"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.Closed
      name = "Closed"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.Escalated
      name = "Escalated"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.In_Progress@s
      name = "In Progress"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.Pending
      name = "Pending"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.Resolved
      name = "Resolved"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
      ]
    },
    {
      id = jira.Status.instance.Waiting_for_customer@s
      name = "Waiting for customer"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.step.key"
          value = "sdWFCustomer"
        },
      ]
    },
    {
      id = jira.Status.instance.Waiting_for_support@s
      name = "Waiting for support"
      properties = [
        {
          key = "jira.issue.editable"
          value = "true"
        },
        {
          key = "sd.step.key"
          value = "sdWFSupport"
        },
      ]
    },
  ]
  name = "GWRSM1: Service Request Fulfilment workflow for Jira Service Management"
}
