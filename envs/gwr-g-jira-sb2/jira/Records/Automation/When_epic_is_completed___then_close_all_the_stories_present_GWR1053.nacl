jira.Automation When_epic_is_completed___then_close_all_the_stories_present_GWR1053@ssss_08594ssssssu {
  name = "When epic is completed â†’ then close all the stories present"
  state = "ENABLED"
  authorAccountId = "61980f073618cd006f48823b"
  actor = {
    type = "ACCOUNT_ID"
    value = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
  }
  trigger = {
    component = "TRIGGER"
    schemaVersion = -1
    type = "jira.issue.event.trigger:transitioned"
    value = {
      eventKey = "jira:issue_updated"
      issueEvent = "issue_generic"
      toStatus = [
        {
          type = "ID"
          value = "5"
        },
      ]
    }
  }
  components = [
    {
      component = "BRANCH"
      schemaVersion = 1
      type = "jira.issue.related"
      value = {
        relatedType = "stories"
        onlyUpdatedIssues = false
        similarityLimit = 0
        compareValue = 0
      }
      children = [
        {
          component = "CONDITION"
          schemaVersion = 3
          type = "jira.issue.condition"
          value = {
            selectedField = {
              type = "ID"
              value = "status"
            }
            selectedFieldType = "status"
            comparison = "NOT_EQUAL"
            compareValue = {
              type = "ID"
              value = "5"
              multiValue = false
            }
          }
        },
        {
          component = "ACTION"
          schemaVersion = 10
          type = "jira.issue.transition"
          value = {
            operations = [
              {
                field = {
                  type = "ID"
                  value = "resolution"
                }
                fieldType = "resolution"
                type = "SET"
                value = {
                  type = "COPY"
                  value = "epic"
                }
              },
            ]
            sendNotifications = true
            destinationStatus = {
              type = "ID"
              value = "5"
            }
          }
        },
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.GWR1053
    },
  ]
  tags = [
    {
      tagType = "CREATION_TYPE"
      tagValue = "RECOMMENDED"
    },
    {
      tagType = "SAMPLE_RULE"
      tagValue = "software"
    },
    {
      tagType = "TEMPLATE_ID"
      tagValue = "software_template_2"
    },
  ]
  writeAccessType = "UNRESTRICTED"
}
